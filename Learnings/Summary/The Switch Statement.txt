The Switch Statement
In This page I Understand the switch statement in JavaScript, which is used for handling multiple conditions efficiently.

1. What is switch?
* A switch statement is like multiple if...else conditions but more readable.
* It compares a value against multiple cases and executes the matching one.

2. Basic Syntax
javascript
CopyEdit
let fruit = "apple";

switch (fruit) {
  case "banana":
    console.log("It's a banana!");
    break;
  case "apple":
    console.log("It's an apple!");
    break;
  case "mango":
    console.log("It's a mango!");
    break;
  default:
    console.log("Unknown fruit");
}
How it works:
* The value of fruit is checked against each case.
* If a match is found, that block runs.
* break; is used to stop execution after a match (otherwise, it will continue to the next case).
* The default block runs if no case matches (like else in if...else).

3. The Importance of break
If break is missing, the execution falls through to the next case:
javascript
CopyEdit
let number = 2;

switch (number) {
  case 1:
    console.log("One");
  case 2:
    console.log("Two"); // Runs
  case 3:
    console.log("Three"); // Runs too (no break)
}
 Since there’s no break, all matching cases and the ones below execute.

4. Grouping Cases
Multiple cases can share the same block:
javascript
CopyEdit
let day = "Saturday";

switch (day) {
  case "Saturday":
  case "Sunday":
    console.log("Weekend!");
    break;
  default:
    console.log("Weekday");
}
Here, both "Saturday" and "Sunday" lead to "Weekend!".

5. switch vs. if...else
* Use switch when checking the same variable against multiple values.
* Use if...else when conditions involve logical expressions (<, >, &&, etc.).

Key Insights
* switch is useful when comparing one value to multiple options.
* Always use break to prevent fall-through (unless intentional).
* Use default to handle unexpected values.
* You can group cases if they share the same output
